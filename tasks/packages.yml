- name: Get package facts
  package_facts:
    manager: auto

- name: Upgrade Packages
  ansible.builtin.apt:
    update_cache: true
    upgrade: full
  become: true
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: Install Packages
  ansible.builtin.apt:
    name: "{{ apt.packages }}"
  become: true

- name: Install pip packages
  ansible.builtin.pip:
    name:
      - awscli
      - docker-compose
      - pre-commit
      - yq

- name: Import GPG keys
  ansible.builtin.apt_key:
    url: "{{ item.1 }}"
  become: true
  with_subelements:
    - "{{ repos }}"
    - package.public_keys

- name: Add apt repos
  ansible.builtin.apt_repository:
    repo: "{{ item.package.repository | dict2items | json_query('[].value') | first }}"
    filename: "{{ item.package.repository | dict2items | json_query('[].key') | first }}"
  become: true
  with_items:
    "{{ repos }}"

- name: Install non standard packages
  ansible.builtin.apt:
    name: "{{ item.package.name }}"
  become: true
  with_items:
    "{{ repos }}"

- name: Install Snap apps
  snap:
    name: "{{ snap.apps }}"
    classic: true
  become: true

# TODO only install vagrant when not running as a guest system
- name: Install gopass, minikube, vagrant and zoom
  ansible.builtin.apt:
    deb: "{{ item.url }}"
  become: true
  register: installed_deb_packages
  when: not item.key in ansible_facts.packages.keys() and\n
        not item.version in ansible_facts.packages.{{ item.key }}[0].version
  with_items:
    "{{ deb_packages }}"

- name: Set fact for minikube handler
  ansible.builtin.set_fact:
    minikube_changes: "{{ installed_deb_packages.results | json_query(\n
      '[?item == `https://storage.googleapis.com/minikube/\n
      releases/latest/minikube_{{ minikube_version }}_amd64.deb`].changed') }}"

- name: Make docker the default minikube driver
  ansible.builtin.command: minikube config set driver docker
  when: minikube_changes | bool
  changed_when: true

- name: Cleanup apt
  ansible.builtin.apt:
    autoremove: true
    autoclean: true
  become: true
